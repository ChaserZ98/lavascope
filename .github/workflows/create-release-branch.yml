name: Create Release Branch
run-name: "${{github.actor}} is trying to create a ${{github.event.inputs.semverType}} release"
on:
  workflow_dispatch:
    inputs:
      semverType:
        description: "The type of semver version to create"
        required: true
        type: choice
        options:
          - major
          - premajor
          - minor
          - preminor
          - patch
          - prepatch
          - prerelease
          - initial
        default: "patch"
      preid:
        description: "The prerelease identifier"
        required: false
        type: choice
        options:
          - alpha
          - beta
          - rc
          - canary
        default: "canary"
jobs:
  create-release-branch:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    env:
      SEMVER_TYPE: ${{github.event.inputs.semverType}}
      PREID: ${{github.event.inputs.preid}}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Get next version
        run: |
          if [[ $SEMVER_TYPE == "initial" ]]; then
            NEXT_VERSION=0.1.0
          else
            if [[ $SEMVER_TYPE == "premajor" || $SEMVER_TYPE == "preminor" || $SEMVER_TYPE == "prepatch" ]]; then
              BUMP_COMMAND="npm version $SEMVER_TYPE --preid=$PREID --no-git-tag-version --tag-version-prefix=''"
            else
              BUMP_COMMAND="npm version $SEMVER_TYPE --no-git-tag-version --tag-version-prefix=''"
            fi
            NEXT_VERSION=$(eval $BUMP_COMMAND)
          fi
          echo "The next version is $NEXT_VERSION"
          echo "BUMP_COMMAND=$BUMP_COMMAND" >> $GITHUB_ENV
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
      - name: Setup git config
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Create Release Branch
        run: |
          git reset --hard HEAD
          git checkout -b release/$NEXT_VERSION
      - name: Bump version
        if: ${{ github.event.inputs.semverType != 'initial' }}
        run: eval $BUMP_COMMAND
      - name: Generate changelog
        if: ${{ github.event.inputs.semverType == 'initial' }}
        uses: orhun/git-cliff-action@v4
        id: git-cliff-generate
        with:
          config: cliff.toml
          args: --verbose --unreleased --tag $NEXT_VERSION
        env:
          OUTPUT: CHANGELOG.md
      - name: Prepend changelog
        if: ${{ github.event.inputs.semverType != 'initial' }}
        uses: orhun/git-cliff-action@v4
        id: git-cliff-prepend
        with:
          config: cliff.toml
          args: --verbose --unreleased --tag $NEXT_VERSION --prepend CHANGELOG.md
        env:
          OUTPUT: ""
      - name: Commit and push changes
        run: |
          git add CHANGELOG.md package.json
          git commit -am "ðŸš€ release: Release $NEXT_VERSION"
          git push origin release/$NEXT_VERSION
